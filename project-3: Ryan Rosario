////Globals
Ball a,b,c,d,e,f;
Rodent mouse;

float left, right, top, bottom;
float middle;
boolean wall=true;
int tableRed=173, tableGreen=75, tableBlue=255;

void setup() {
  size(700, 500);
   left= 50;
   right= width-50;
   top= 100;
   bottom= height-50;
   middle= right - left/2;
///Cue
   a= new Ball();
   a.r=255;
   a.g=255;
   a.b=255;
   a.name= "c";
///Red Ball   
   b= new Ball();
   b.r=255;
   b.name= "1";
///Green ball
   c= new Ball();
   c.g=255;
   c.name= "2";
///Blue ball
   d= new Ball();
   d.b=255;
   d.name= "3";
///
   e= new Ball();
   e.b=255;
   e.g=255;
   e.name= "4";
///
   f= new Ball();
   f.r=255;
   f.b=255;
   f.name= "5";

///Rodent
   mouse= new Rodent();
//
   reset();
}

void reset(){
  a.x=100; a.y=280; a.dx=0; a.dy=0;
  b.reset();
  c.reset();
  d.reset();
  e.reset();
  f.reset();
  mouse.reset();
///wall
   wall=true;
///color
   tableRed=173; tableGreen=75; tableBlue=255;
}
 
 void keyPressed() {
   if(key == 'q') {
      exit();
   }
   if(key == 'r') {
     reset();
   }
   if(key == 'w') {
     wall=false;
   }
   if(key == 'm') {
     mouse.dx=5;
     mouse.dy=3;
   }
 }
 
 void draw(){
     background( #19F5E0 );
     rectMode( CORNERS );
     table(left, top, right, bottom);
     balls();
     rodent();
 }
 
 void table( float east, float north, float west, float south ) {
  fill( tableRed, tableGreen, tableBlue );    // pool table
  strokeWeight(20);
  stroke( 127, 0, 0 );      // Brown walls
  rect( east-20, north-20, west+20, south+20 );
 
  ///Wall
 if (wall) {
    float middle=  (east+west)/2;    
    stroke( 0, 127, 0 );
    line( middle,north+10, middle,south-10 );
  } else wall = false; 
   stroke(0);
   strokeWeight(1);
 }
 
 void balls() {
   a.move();
   b.move();
   c.move();
   d.move();
   e.move();
   f.move();
   collision(a,b);
   collision(a,c);
   collision(a,d);
   collision(a,e);
   collision(a,f);
   collision(b,c);
   collision(b,d);
   collision(b,e);
   collision(b,f);
   collision(c,d);
   collision(c,e);
   collision(c,f);
   collision(d,e);
   collision(d,f);
   collision(e,f);
   //
   a.show();
   b.show();
   c.show();
   d.show();
   e.show();
   f.show();
 }
 
 void rodent() {
    mouse.show();
    mouse.move();
 }
   
////Elastic collisions
 void collision( Ball p, Ball q) {
   if(p.hit( q.x, q.y) ) {
     float tmp;
     tmp=p.dx; p.dx=q.dx; q.dx=tmp;
     tmp=p.dy; p.dy=q.dy; q.dy=tmp;
   }
 }
 
 
 
 
 class Ball {
  //// PROPERTIES:  position, speed, color, etc. ////   (What a Ball "has".)
  float x,y, dx,dy;
  int r,g,b;
  String name="";
  
  
  //// METHODS
  void show() {
    fill(r,g,b);
    ellipse( x,y, 30,30 );
    fill(0);
    text( name, x-5,y );
  }
  void move() {
    if(wall) {
    if (x>right || x<width/1.9) {  dx=  -dx; }
    if (y>bottom || y<top) {  dy=  -dy; }
    }
    else {
    if (x>right || x<left) {  dx=  -dx; }
    if (y>bottom || y<top) {  dy=  -dy; }
    }

    
    x += dx;
    y += dy;
  }
  void reset() {
    x=  random(middle, right);
    y=  random( top, bottom );
    dx=  random( 1,3);
    dy=  random( 1,3 );
  }

  
  boolean hit( float x, float y ) {
    if (  dist( x,y, this.x,this.y ) < 30 ) return true;
    else return false;
  }
}


class Rodent{
////Properties   
  float x, y, dx, dy;

////Methods
  void show(){
    fill(#AA5D29);                     ellipse(x,y, 60, 30);//// Rodent body
    fill(#FF55F7);                     ellipse(x+20, y-15, 10,20);//// Rodent left ear
    fill(#FF55F7);                     ellipse(x+40, y-15, 10,20);//// Rodent right ear
    fill( #AA5D29);                    ellipse(x+30, y-10, 40,20); ///// Rodent head
    fill(#FF55F7);                     ellipse(x+50, y-10, 5,5);   ///// Rodent nose
    fill(0);                           ellipse(x+35, y-15, 5,5);  ///// Rodent eye
    stroke(#FF55F7); strokeWeight(2);  line(x-30, y, x-50, y+30); ////Rodent tail
    stroke(0);///color Rodent legs black
//////Rodent animation: leg movement
    if(frameCount % 30 > 15){ 
///Rodent legs first position
    line( x-20, y+10, x-30, y+20);
    line(x+20, y+10, x+30, y+20);}
///Rodent leg second position
    else{line( x-10, y+10, x-10, y+20);
   }
  }
  
 void move(){
///mouse remains on table
   if (y>bottom || y<top) {  dy=  -dy; }
///reset mouse position without resetting entire program   
   if(x>width) {reset();}
   x+=dx;
   y+=dy;
 
   
 }
    

  void reset(){
///mouse is not a nusance until button is pressed
    x=width-790; y=random(top,bottom);
    dx=0; dy=0;
  }
  
  boolean hit( float x, float y ) {
    if (  dist( x,y, this.x,this.y ) < 30 ) return true;
    else return false;
 }
}
    


  
 
   
   
